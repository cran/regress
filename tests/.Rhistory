source("../R/regress.R")
source("../R/regress.R")
source("../R/regress.R")
q()
q()
b1
rmvnorm
library(MASS)
mvrnorm
dim(tt)
matplot(tt)
matplot(t(tt),type="l")
b1$Mean
plot(tt
)
plot(data.frame(tt))
q()
q()
library(regress)
example(regress)
14.64^2
bb$Mean
q()
examples(regress)
example(regress)
14.64488^2
 ## Example of Random Effects model from Venables and Ripley, page 205
  library("nlme")
  library("regress")

  citation("regress")

  names(Oats) <- c("B","V","N","Y")
  Oats$N <- as.factor(Oats$N)

  ## Using regress
  oats.reg <- regress(Y~N+V,~B+I(B:V),identity=TRUE,verbose=1,data=Oats)
  summary(oats.reg)

  ## Using lme
  oats.lme <- lme(Y~N+V,random=~1|B/V,data=Oats,method="REML")
  summary(oats.lme)

ranef(oats.lme)
  BLUP(oats.reg)$Mean
reg.obj
sig
dim(sig)
reg.obj <- regress(y~X-1,~sig1+sig2+gam,identity=FALSE,start=c(1,1,0.5),kernel=0,verbose=2)
cov2cor(Sig)
3.373/sqrt(6.523 * 6.97)
oats.reg
model <- oats.reg
names(model)
names(model$model)
model$fitted
RE <- NULL
 if(length(RE)==0) RE <- setdiff(model$Vnames,"In")
    if(any(is.na(match(RE,model$Vnames)))) stop(paste("RE should be a subset of",model$Vnames))
    if(class(model)!="regress") stop("model should be of class regress")

 ## conditional expected values - all of them
    Wy <- model$W %*% (model$model[[1]] - model$fitted)
    Us <- list()
    for(ii in 1:length(model$Z)) {
        Us[[ii]] <- as.vector(model$sigma[ii] * t(model$Z[[ii]]) %*% Wy)
        names(Us[[ii]]) <- colnames(model$Z[[ii]])
    }
    names(Us) <- names(model$sigma)
Us[[1]]
ranef(Oats.lme)
ranef(oats.lme)
args(regress)
reg.obj
reg.obj2
 9.165408 / 4.582704
5.391017 / 2.695509
9.165408 /  5.391017
files
files
files
files
mtrace(regress)
qqq()
regress(y~X-1,~sig1+sig2+gam,identity=FALSE,start=c( 5.391017, 5.391017, 5.391017*0.5),verbose=10,maxcyc=1)
go(187)
maxcyc
pos
y
y[1]
qqq()
qqq()
mtrace.off()
regress(y~X-1,~sig1+sig2+gam,identity=FALSE,start=c( 5.391017, 5.391017, 5.391017*0.5),verbose=10,maxcyc=1)
Sigma[1:5]
dim(Sigma)
sig1[1:5]
sig2[1:5]
gam[1:5]
pmin(1,20)
pmax(1,-20)
exp(1)
identical(m1$model,m2$model)
names(m1$model)
identical(m1$y,m2$y)
identical(m1$X,m2$X)
identical(m1$sig1,m2$sig1)
identical(m1$sig2,m2$sig2)
identical(m1$gam,m2$gam)
identical(m1$formula,m2$formula)
m1$formula
m2$formula
m1$model$y
identical(m1$model$y,m2$model$y)
m1$model$y-m2$model$y
names(m2$model)
names(m2)
m2$trace
m1$trace
m1$kernel
m2$kernel
m1$reml
m2$reml
rm(Sigma)
class(sig1)
mtrace(regress)
qqq()
m1 <- regress(y~X-1,~sig1+sig2+gam,identity=FALSE,start=c(1,1,0.5),verbose=10,maxcyc=1)
go(12)
go(21)
dim(V[[1]])
dim(V[[2]])
is.factor(V[[1]])
go(101)
sapply(V,is.factor)
all
qqq()
q()
Sig[1:3]
b1
names(b1)
unlist(b1)
b1$B
b2$Mean
q()
files
files
files
files
sum((reg.obj$sigma - Sig[c(1,2,4)])^2)
reg.obj$sigma
Sig[c(1,2,4)]
coef(oats.lme)
names(oats.lme)
oats.lme$sigma
oats.lme$sigma^2
oats.lme$sigma^2 - oats.reg$sigma
oats.lme$apVar
oats.lme$varFix
tt <- summary(oats.lme)
names(tt)
tt%sigma
tt$sigma
print.lme
class(oats.lme)
summary.lme
nlme:::summary.lme
object$corFixed
oats.lme
nlme:::print.lme
print(summary(object$modelStruct), sigma = x$sigma)
print(summary(object$modelStruct), sigma = object$sigma)
object$modelStruct
summary(object$modelStruct)
print(summary(object$modelStruct), sigma = object$sigma)
tt <- print(summary(object$modelStruct), sigma = object$sigma)
tt
names(tt)
object$modelStruct
b1
b1 - b2
q()
